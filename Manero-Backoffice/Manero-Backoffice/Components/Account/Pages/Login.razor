@page "/Account/Login"

<PageTitle>Log in</PageTitle>
  
<section class="login">
    <div class="container">
     
        
            <div class="title-section">
                <h1>Welcome Back!</h1>
                <p>Manero Admin</p>
            </div>

            <div class="form-section">
                <StatusMessage Message="@errorMessage" />
                <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
                    <DataAnnotationsValidator />
                    <ValidationSummary class="text-danger" role="alert" />
                    <div class="input-group">
                        <label for="email">Email</label>
                    <InputText @bind-Value="Input.Email" class="text-input" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                        <ValidationMessage For="() => Input.Email" class="text-danger" />
                    </div>
                    <div class="input-group">
                        <label for="password">Password</label>
                    <InputText type="password" @bind-Value="Input.Password" class="text-input" autocomplete="current-password" aria-required="true" placeholder="enter your password" />
                        <ValidationMessage For="() => Input.Password" class="text-danger" />
                    </div>
                    <div class="checkbox-link-section">
                        <div class="checkbox">
                            <label>
                                <InputCheckbox @bind-Value="Input.RememberMe" class="remember-me" />
                                Remember me
                            </label>
                        </div>
                        <div class="forgot-password">
                            <a href="Account/ForgotPassword">Forgot password?</a>
                        </div>
                    </div>
                    
               
                    <div class="btn-submit">
                        <button type="submit" class="btn-theme">Log in</button>
                    </div>
                
                </EditForm>
            </div>
    </div>
</section>


@code {
    private string? errorMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private LoginForm Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {
        try
        {
            var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);
            if (result.Succeeded)
            {
                Logger.LogInformation("User logged in.");
                RedirectManager.RedirectTo("/Account/Register");
            }
            else
                errorMessage = "Incorrect email or password";
        }

        catch (Exception ex)
        {
            Logger.LogError($"ERROR : Login.LoginUser() :: {ex.Message}");
            errorMessage = "Something went wrong";
        }
    }
}
