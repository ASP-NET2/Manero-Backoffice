@using Manero_Backoffice.Generics
@typeparam TItem
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService AuthorizationService

<table class="table">
    <thead class="table-head">
        <tr>
            @foreach (var column in Model.Columns)
            {
                <th>@column.Value</th>
            }
            @if (EditAction != null || DeleteAction != null)
            {
                <th></th>
            }
        </tr>
    </thead>
    <tbody class="table-body">
        @if (Model.Items != null && Model.Items.Any())
        {
            foreach (var item in Model.Items)
            {
                <tr class="table-row">
                    @foreach (var column in Model.Columns)
                    {
                        <td class="row-col">@item!.GetType().GetProperty(column.Key)!.GetValue(item)</td>
                    }
                    @if (EditAction != null || DeleteAction != null)
                    {
                        <td class="btn-container">
                            <AuthorizeView Roles="@ModifyPermissionRoles">
                                @if (EditAction != null)
                                {
                                    <button class="info" @onclick="() => EditAction(item)" title="Edit"><i class="fa-regular fa-pen"></i></button>
                                }
                                @if (DeleteAction != null)
                                {
                                    <button class="danger" @onclick="() => DeleteAction(item)" title="Delete"><i class="fa-regular fa-trash"></i></button>
                                }
                            </AuthorizeView>
                        </td>
                    }
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="@(Model.Columns.Count + (EditAction != null || DeleteAction != null ? 1 : 0))" class="no-items">No items to display</td>
            </tr>
        }
    </tbody>
</table>

@code {
    [Parameter]
    public TableModel<TItem> Model { get; set; } = null!;

    [Parameter]
    public Func<TItem, Task>? EditAction { get; set; }

    [Parameter]
    public Func<TItem, Task>? DeleteAction { get; set; }

    [Parameter]
    public string ModifyPermissionRoles { get; set; } = "Admin, Super Admin";
}
